basePath: /api/v1
definitions:
  bodybinder.validationErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/bodybinder.validationErrorResponseItem'
        type: array
    type: object
  bodybinder.validationErrorResponseItem:
    properties:
      field:
        type: string
      reason:
        type: string
    type: object
  controllers.HandleAuthLogin.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.HandleAuthRegister.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  controllers.HandleMetricsStatus.MetricsStatusResponse:
    properties:
      status:
        type: string
    type: object
  controllers.HandleUsersMe.MeResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  schemas.BadRequestResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Project description at https://github.com/berk-karaal/letuspass
  title: LetusPass REST API
  version: 0.0.1
paths:
  /auth/login:
    post:
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.HandleAuthLogin.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.BadRequestResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/bodybinder.validationErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      parameters:
      - description: User Registration Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.HandleAuthRegister.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.BadRequestResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/bodybinder.validationErrorResponse'
        "500":
          description: Internal Server Error
      summary: Register user
      tags:
      - auth
  /metrics/status:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HandleMetricsStatus.MetricsStatusResponse'
      summary: Get status of the server
      tags:
      - metrics
  /users/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HandleUsersMe.MeResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Get currently logged-in user
      tags:
      - users
swagger: "2.0"
